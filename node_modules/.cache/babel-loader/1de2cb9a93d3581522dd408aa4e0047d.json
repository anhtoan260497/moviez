{"ast":null,"code":"import _objectSpread from\"/Users/rengarrrrr/Desktop/Studies/movie/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import\"./styles.scss\";import{useState}from\"react\";import{useForm}from\"react-hook-form\";import{useNavigate}from\"react-router-dom\";import{useDispatch}from\"react-redux\";import{changeSearch,submitSearch}from\"../../../Slice/searchSlice\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SearchBar(){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var navigate=useNavigate();var dispatch=useDispatch();var search=useSelector(function(state){return state.search.search;});var onSubmitSearch=function onSubmitSearch(){var action=submitSearch(search);dispatch(action);navigate({pathname:\"search\",search:\"query=\".concat(search)});};//get data after submit\nvar handleChangeSearch=function handleChangeSearch(e){dispatch(changeSearch(e.target.value));};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmitSearch),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({className:\"search-field\",type:\"text\",autoComplete:\"none\"},register(\"search\",{maxLength:20})),{},{//controller\nplaceholder:\"Search for a movie, TV Show, ...\",onChange:function onChange(e){return handleChangeSearch(e);},value:search})),/*#__PURE__*/_jsx(\"button\",{className:\"search-btn\",type:\"submit\",children:\"Search\"})]});}export default SearchBar;","map":{"version":3,"sources":["/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/SearchBar/index.jsx"],"names":["React","useState","useForm","useNavigate","useDispatch","changeSearch","submitSearch","useSelector","SearchBar","register","handleSubmit","navigate","dispatch","search","state","onSubmitSearch","action","pathname","handleChangeSearch","e","target","value","maxLength"],"mappings":"4HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,eAAP,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,YAAT,CAAuBC,YAAvB,KAA2C,4BAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,C,wFAIA,QAASC,CAAAA,SAAT,EAAqB,CAEnB,aAAmCN,OAAO,EAA1C,CAAQO,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CACA,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAMS,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAEA,GAAMS,CAAAA,MAAM,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,MAAN,CAAaA,MAAjB,EAAN,CAA1B,CAGA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAMC,CAAAA,MAAM,CAAGV,YAAY,CAACO,MAAD,CAA3B,CAEAD,QAAQ,CAACI,MAAD,CAAR,CAEAL,QAAQ,CAAC,CACPM,QAAQ,CAAE,QADH,CAEPJ,MAAM,iBAAWA,MAAX,CAFC,CAAD,CAAR,CAID,CATD,CAUA;AAEA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,CAAD,CAAO,CAChCP,QAAQ,CAACP,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CAAR,CACD,CAFD,CAIA,mBACE,cAAM,QAAQ,CAAEX,YAAY,CAACK,cAAD,CAA5B,wBAEE,0CACE,SAAS,CAAC,cADZ,CAEE,IAAI,CAAC,MAFP,CAGE,YAAY,CAAC,MAHf,EAIMN,QAAQ,CAAC,QAAD,CAAW,CAAEa,SAAS,CAAE,EAAb,CAAX,CAJd,MAI6C;AAC3C,WAAW,CAAC,kCALd,CAME,QAAQ,CAAE,kBAAAH,CAAC,QAAED,CAAAA,kBAAkB,CAACC,CAAD,CAApB,EANb,CAOE,KAAK,CAAEN,MAPT,GAFF,cAWE,eAAQ,SAAS,CAAC,YAAlB,CAA+B,IAAI,CAAC,QAApC,oBAXF,GADF,CAiBD,CAED,cAAeL,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSearch, submitSearch } from \"../../../Slice/searchSlice\";\nimport { useSelector } from \"react-redux\";\n\nSearchBar.propTypes = {};\n\nfunction SearchBar() {\n\n  const { register, handleSubmit } = useForm();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch()\n\n  const search = useSelector(state => state.search.search)\n\n\n  const onSubmitSearch = () => {\n    const action = submitSearch(search)\n\n    dispatch(action)\n\n    navigate({\n      pathname: \"search\",\n      search: `query=${search}`,\n    });\n  };\n  //get data after submit\n\n  const handleChangeSearch = (e) => {\n    dispatch(changeSearch(e.target.value))\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmitSearch)}>\n      {/*onSubmit event = handleSubmit(useForm) and has 1 parameter is onSubmitSearch function */}\n      <input\n        className=\"search-field\"\n        type=\"text\"\n        autoComplete=\"none\"\n        {...register(\"search\", { maxLength: 20 })} //controller\n        placeholder=\"Search for a movie, TV Show, ...\"\n        onChange={e=>handleChangeSearch(e)}\n        value={search}\n      />\n      <button className=\"search-btn\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}