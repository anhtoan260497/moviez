{"ast":null,"code":"var _jsxFileName = \"/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmOverview/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport { Progress } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport tvAPI from \"../../../../api/tvAPI\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport { useState } from \"react\";\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\nimport { changeFilmType } from \"../../../Slice/filmTypeSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nFilmOverview.propTypes = {};\n\nfunction FilmOverview() {\n  _s();\n\n  const location = useLocation();\n  const type = useSelector(state => state.filmType);\n  const dispatch = useDispatch();\n  const id = type === \"tv\" ? location.pathname.slice(4) : location.pathname.slice(7);\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n  const [data, setData] = useState();\n  const [trailerURL, setTrailerURL] = useState(\"\");\n  useEffect(() => {\n    const type = location.pathname.slice(1, 3);\n    const action = changeFilmType(type);\n    dispatch(action);\n  }, [location.pathname, dispatch]);\n  useEffect(() => {\n    if (!id || !type) return;\n\n    const fetchMovieData = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTvInfo(API_Key, id);\n        setData(data.data);\n      }\n\n      if (type === \"movie\") {\n        const data = await movieAPI.getMovieInfo(API_Key, id);\n        setData(data.data);\n      }\n    };\n\n    fetchMovieData();\n  }, [id, type, API_Key]);\n  useEffect(() => {\n    // if (!data) return;\n    const fetchTrailer = async () => {\n      if (type === \"tv\") {\n        var _trailer$;\n\n        const data = await tvAPI.getTrailerHome(API_Key, id);\n        const trailer = data.data.results.filter(item => item.name.includes(\"Official Trailer\") || item.name.includes(\"Trailer\"));\n        setTrailerURL((_trailer$ = trailer[0]) === null || _trailer$ === void 0 ? void 0 : _trailer$.key);\n      }\n\n      if (type === \"mo\") {\n        var _trailer$2;\n\n        const data = await movieAPI.getTrailerHome(API_Key, id);\n        const trailer = data.data.results.filter(item => item.name.includes(\"Official Trailer\") || item.name.includes(\"Trailer\"));\n        setTrailerURL((_trailer$2 = trailer[0]) === null || _trailer$2 === void 0 ? void 0 : _trailer$2.key);\n      }\n    };\n\n    fetchTrailer();\n  }, [data, API_Key, id, type]);\n\n  const renderOverview = () => {\n    if (!data) return;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          height: \"32rem\",\n          width: \"100%\",\n          background: \"linear-gradient(180deg,rgba(0,0,0,80%),rgba(0,0,0,100%))\",\n          opacity: \"0.7\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"film-overview-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"film-overview-poster\",\n          src: data !== null && data !== void 0 && data.poster_path ? `https://image.tmdb.org/t/p/original${data === null || data === void 0 ? void 0 : data.poster_path}` : null,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"film-overview-description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"film-overview-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: type === \"tv\" ? data === null || data === void 0 ? void 0 : data.original_name : data === null || data === void 0 ? void 0 : data.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), trailerURL ? /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                marginLeft: \"1rem\",\n                cursor: \"pointer\"\n              },\n              title: \"Trailer\",\n              href: `https://www.youtube.com/watch?v=${trailerURL}`,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(PlayCircleOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 30\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"film-overview-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: \"white\",\n                fontWeight: \"600\"\n              },\n              children: \"User Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              width: 70,\n              className: \"score-progress\",\n              type: \"circle\",\n              percent: (data === null || data === void 0 ? void 0 : data.vote_average) * 10,\n              trailColor: (data === null || data === void 0 ? void 0 : data.vote_average) * 10 > 75 ? \"rgba(33,208,122,40%)\" : (data === null || data === void 0 ? void 0 : data.vote_average) * 10 <= 75 && (data === null || data === void 0 ? void 0 : data.vote_average) * 10 > 50 ? \"rgba(212,213,48,40%)\" : \"rgba(219,35,96,40%)\",\n              strokeColor: (data === null || data === void 0 ? void 0 : data.vote_average) * 10 > 75 ? \"rgb(33,208,122)\" : (data === null || data === void 0 ? void 0 : data.vote_average) * 10 <= 75 && (data === null || data === void 0 ? void 0 : data.vote_average) * 10 > 50 ? \"rgb(212,213,48)\" : \"rgb(219,35,96)\",\n              strokeWidth: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tagline\",\n            children: data === null || data === void 0 ? void 0 : data.tagline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overview\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: \"white\",\n                fontSize: \"1.5rem\"\n              },\n              children: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"overview-description\",\n              children: data === null || data === void 0 ? void 0 : data.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"film-overview\",\n    style: {\n      backgroundImage: data ? `url(https://image.tmdb.org/t/p/original${data === null || data === void 0 ? void 0 : data.backdrop_path})` : null\n    },\n    children: [\" \", renderOverview()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilmOverview, \"yBSJo8MfdfGJIZBczOYC21JnnG4=\", false, function () {\n  return [useLocation, useSelector, useDispatch];\n});\n\n_c = FilmOverview;\nexport default FilmOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmOverview\");","map":{"version":3,"sources":["/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmOverview/index.jsx"],"names":["React","PropTypes","Progress","useLocation","useEffect","tvAPI","movieAPI","useState","PlayCircleOutlined","changeFilmType","useDispatch","useSelector","FilmOverview","propTypes","location","type","state","filmType","dispatch","id","pathname","slice","API_Key","process","env","REACT_APP_MOVIE_API","data","setData","trailerURL","setTrailerURL","action","fetchMovieData","getTvInfo","getMovieInfo","fetchTrailer","getTrailerHome","trailer","results","filter","item","name","includes","key","renderOverview","position","height","width","background","opacity","poster_path","original_name","original_title","marginLeft","cursor","color","fontWeight","vote_average","tagline","fontSize","overview","backgroundImage","backdrop_path"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport { Progress } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport tvAPI from \"../../../../api/tvAPI\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport { useState } from \"react\";\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\nimport { changeFilmType } from \"../../../Slice/filmTypeSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nFilmOverview.propTypes = {};\n\nfunction FilmOverview() {\n  const location = useLocation();\n\n  const type = useSelector((state) => state.filmType);\n\n  const dispatch = useDispatch();\n\n\n  const id =\n    type === \"tv\" ? location.pathname.slice(4) : location.pathname.slice(7);\n\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const [data, setData] = useState();\n\n\n  const [trailerURL, setTrailerURL] = useState(\"\");\n\n  useEffect(() => {\n    const type = location.pathname.slice(1, 3);\n    const action = changeFilmType(type);\n    dispatch(action);\n  }, [location.pathname, dispatch]);\n\n  useEffect(() => {\n    if (!id || !type) return;\n    const fetchMovieData = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTvInfo(API_Key, id);\n        setData(data.data);\n      }\n      if (type === \"movie\") {\n        const data = await movieAPI.getMovieInfo(API_Key, id);\n        setData(data.data);\n      }\n    };\n    fetchMovieData();\n  }, [id, type, API_Key]);\n\n  useEffect(() => {\n    // if (!data) return;\n    const fetchTrailer = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTrailerHome(API_Key, id);\n        const trailer = data.data.results.filter(\n          (item) =>\n            item.name.includes(\"Official Trailer\") ||\n            item.name.includes(\"Trailer\")\n        );\n        setTrailerURL(trailer[0]?.key);\n      }\n      if (type === \"mo\") {\n        const data = await movieAPI.getTrailerHome(API_Key, id);\n        const trailer = data.data.results.filter(\n          (item) =>\n            item.name.includes(\"Official Trailer\") ||\n            item.name.includes(\"Trailer\")\n        );\n        setTrailerURL(trailer[0]?.key);\n      }\n    };\n    fetchTrailer();\n  }, [data, API_Key, id, type]);\n\n  const renderOverview = () => {\n    if (!data) return;\n\n\n    return (\n      <>\n        <div\n          style={{\n            position: \"absolute\",\n            height: \"32rem\",\n            width: \"100%\",\n            background:\n              \"linear-gradient(180deg,rgba(0,0,0,80%),rgba(0,0,0,100%))\",\n            opacity: \"0.7\",\n          }}\n        ></div>\n        <div className=\"film-overview-content\">\n          <img\n            className=\"film-overview-poster\"\n            src={data?.poster_path ? `https://image.tmdb.org/t/p/original${data?.poster_path}` : null}\n            alt=\"\"\n          />\n          <div className=\"film-overview-description\">\n            <div className=\"film-overview-title\">\n              <span>{type === \"tv\" ? data?.original_name : data?.original_title}</span>\n              {trailerURL ?  <a\n                style={{ marginLeft: \"1rem\", cursor: \"pointer\" }}\n                title=\"Trailer\"\n                href={`https://www.youtube.com/watch?v=${trailerURL}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <PlayCircleOutlined />\n              </a> : null}\n            </div>\n            <div className=\"film-overview-score\">\n              <h4 style={{ color: \"white\", fontWeight: \"600\" }}>User Score</h4>\n              <Progress\n                width={70}\n                className=\"score-progress\"\n                type=\"circle\"\n                percent={data?.vote_average * 10}\n                trailColor={\n                  data?.vote_average * 10 > 75\n                    ? \"rgba(33,208,122,40%)\"\n                    : data?.vote_average * 10 <= 75 && data?.vote_average * 10 > 50\n                    ? \"rgba(212,213,48,40%)\"\n                    : \"rgba(219,35,96,40%)\"\n                }\n                strokeColor={\n                  data?.vote_average * 10 > 75\n                    ? \"rgb(33,208,122)\"\n                    : data?.vote_average * 10 <= 75 && data?.vote_average * 10 > 50\n                    ? \"rgb(212,213,48)\"\n                    : \"rgb(219,35,96)\"\n                }\n                strokeWidth={10}\n              />\n            </div>\n            <p className=\"tagline\">{data?.tagline}</p>\n            <div className=\"overview\">\n              <h3 style={{ color: \"white\", fontSize: \"1.5rem\" }}>Overview</h3>\n              <p className=\"overview-description\">{data?.overview}</p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <section\n      className=\"film-overview\"\n      style={{\n        backgroundImage: data\n          ? `url(https://image.tmdb.org/t/p/original${data?.backdrop_path})`\n          : null,\n      }}\n    >\n      {\" \"}\n      {renderOverview()}\n    </section>\n  );\n}\n\nexport default FilmOverview;\n"]},"metadata":{},"sourceType":"module"}