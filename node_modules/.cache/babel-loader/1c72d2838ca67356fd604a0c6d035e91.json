{"ast":null,"code":"var _jsxFileName = \"/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport movieAPI from \"../../api/movieAPI\";\nimport tvAPI from \"../../api/tvAPI\";\nimport { useState } from \"react\";\nimport TypeContent from \"./components/TypeContent\";\nimport TypeFilter from \"./components/TypeFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTypeFilm.propTypes = {};\n\nfunction TypeFilm(props) {\n  _s();\n\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n  const location = useLocation();\n  const typeFilm = location === null || location === void 0 ? void 0 : location.pathname.slice(1, 3);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [data, setData] = useState();\n  const [sortData, setSortData] = useState();\n  const type = typeFilm === \"tv\" ? location.pathname.slice(4) : location.pathname.slice(7);\n  const [sortType, setSortType] = useState(\"ratingDescending\");\n\n  const handleSortType = values => {\n    setSortType(values);\n  }; //set sortType\n\n\n  useEffect(() => {\n    if (!typeFilm || !type) return;\n\n    const fetchFilmData = async () => {\n      switch (typeFilm) {\n        case \"mo\":\n          switch (type) {\n            case \"popular\":\n              {\n                const data = await movieAPI.getMoviePopular(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            case \"nowplaying\":\n              {\n                const data = await movieAPI.getMovieNowPlaying(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            case \"upcoming\":\n              {\n                const data = await movieAPI.getMovieUpcoming(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            case \"toprated\":\n              {\n                const data = await movieAPI.getMovieToprated(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            default:\n              return null;\n          }\n\n          break;\n\n        case \"tv\":\n          switch (type) {\n            case \"popular\":\n              {\n                const data = await tvAPI.getTvPopular(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            case \"airing\":\n              {\n                const data = await tvAPI.getTvAiring(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            case \"ontv\":\n              {\n                const data = await tvAPI.getTvOnTv(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            case \"toprated\":\n              {\n                const data = await tvAPI.getTvTopRated(API_Key, currentPage);\n                setData(data.data.results);\n                break;\n              }\n\n            default:\n              return null;\n          }\n\n          break;\n\n        default:\n          return null;\n      }\n    };\n\n    fetchFilmData();\n  }, [typeFilm, type, API_Key, currentPage]);\n  useEffect(() => {\n    if (!sortType || !data) return;\n\n    switch (sortType) {\n      case \"popularDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.popularity - a.popularity);\n          setSortData(newData);\n        }\n        break;\n\n      case \"popularAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.popularity - b.popularity);\n          setSortData(newData);\n        }\n        break;\n\n      case \"ratingDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.vote_average - a.vote_average);\n          setSortData(newData);\n        }\n        break;\n\n      case \"ratingAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.vote_average - b.vote_average);\n          setSortData(newData);\n        }\n        break;\n\n      case \"titleDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.title - a.title);\n          setSortData(newData);\n        }\n        break;\n\n      case \"titleAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.title.charCodeAt(0) - b.title.charCodeAt(0));\n          setSortData(newData);\n        }\n        break;\n\n      default:\n        return null;\n    }\n  }, [sortType, data]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"type-film\",\n    style: {\n      position: \"relative\",\n      top: \"4rem\",\n      width: \"100%\",\n      padding: \"2% 5%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"2rem\",\n        margin: \"0\"\n      },\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TypeFilter, {\n        handleSortType: handleSortType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TypeContent, {\n        data: sortData,\n        type: typeFilm === \"tv\" ? \"tv\" : \"movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypeFilm, \"awVxZ6Avh5NEy+GBsIREXuOru/c=\", false, function () {\n  return [useLocation];\n});\n\n_c = TypeFilm;\nexport default TypeFilm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeFilm\");","map":{"version":3,"names":["React","PropTypes","useLocation","useEffect","movieAPI","tvAPI","useState","TypeContent","TypeFilter","TypeFilm","propTypes","props","API_Key","process","env","REACT_APP_MOVIE_API","location","typeFilm","pathname","slice","currentPage","setCurrentPage","data","setData","sortData","setSortData","type","sortType","setSortType","handleSortType","values","fetchFilmData","getMoviePopular","results","getMovieNowPlaying","getMovieUpcoming","getMovieToprated","getTvPopular","getTvAiring","getTvOnTv","getTvTopRated","newData","sort","a","b","popularity","vote_average","title","charCodeAt","position","top","width","padding","fontSize","margin","display","gap"],"sources":["/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport movieAPI from \"../../api/movieAPI\";\nimport tvAPI from \"../../api/tvAPI\";\nimport { useState } from \"react\";\nimport TypeContent from \"./components/TypeContent\";\nimport TypeFilter from \"./components/TypeFilter\";\n\nTypeFilm.propTypes = {};\n\nfunction TypeFilm(props) {\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const location = useLocation();\n\n  const typeFilm = location?.pathname.slice(1, 3);\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [data, setData] = useState();\n\n  const [sortData, setSortData] = useState();\n\n  const type =\n    typeFilm === \"tv\" ? location.pathname.slice(4) : location.pathname.slice(7);\n\n  const [sortType, setSortType] = useState(\"ratingDescending\");\n\n  const handleSortType = (values) => {\n    setSortType(values);\n  }; //set sortType\n\n  useEffect(() => {\n    if (!typeFilm || !type) return;\n    const fetchFilmData = async () => {\n      switch (typeFilm) {\n        case \"mo\":\n          switch (type) {\n            case \"popular\": {\n              const data = await movieAPI.getMoviePopular(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"nowplaying\": {\n              const data = await movieAPI.getMovieNowPlaying(\n                API_Key,\n                currentPage\n              );\n              setData(data.data.results);\n              break;\n            }\n            case \"upcoming\": {\n              const data = await movieAPI.getMovieUpcoming(\n                API_Key,\n                currentPage\n              );\n              setData(data.data.results);\n              break;\n            }\n            case \"toprated\": {\n              const data = await movieAPI.getMovieToprated(\n                API_Key,\n                currentPage\n              );\n              setData(data.data.results);\n              break;\n            }\n            default:\n              return null;\n          }\n          break;\n        case \"tv\":\n          switch (type) {\n            case \"popular\": {\n              const data = await tvAPI.getTvPopular(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"airing\": {\n              const data = await tvAPI.getTvAiring(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"ontv\": {\n              const data = await tvAPI.getTvOnTv(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"toprated\": {\n              const data = await tvAPI.getTvTopRated(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            default:\n              return null;\n          }\n          break;\n        default:\n          return null;\n      }\n    };\n    fetchFilmData();\n  }, [typeFilm, type, API_Key, currentPage]);\n\n  useEffect(() => {\n    if (!sortType || !data) return;\n    switch (sortType) {\n      case \"popularDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.popularity - a.popularity);\n          setSortData(newData);\n        }\n        break;\n      case \"popularAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.popularity - b.popularity);\n          setSortData(newData);\n        }\n        break;\n      case \"ratingDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.vote_average - a.vote_average);\n          setSortData(newData);\n        }\n        break;\n      case \"ratingAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.vote_average - b.vote_average);\n          setSortData(newData);\n        }\n        break;\n      case \"titleDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.title - a.title);\n          setSortData(newData);\n        }\n        break;\n      case \"titleAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.title.charCodeAt(0) - b.title.charCodeAt(0));\n          setSortData(newData);\n        }\n        break;\n      default:\n        return null;\n    }\n  }, [sortType, data]);\n\n  return (\n    <section\n      className=\"type-film\"\n      style={{\n        position: \"relative\",\n        top: \"4rem\",\n        width: \"100%\",\n        padding: \"2% 5%\",\n      }}\n    >\n      <h1 style={{ fontSize: \"2rem\", margin: \"0\" }}>{type}</h1>\n      <div style={{ display: \"flex\", gap: \"1rem\" }}>\n        <TypeFilter handleSortType={handleSortType} />\n        <TypeContent\n          data={sortData}\n          type={typeFilm === \"tv\" ? \"tv\" : \"movie\"}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport default TypeFilm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}