{"ast":null,"code":"var _jsxFileName = \"/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport searchAPI from \"../../api/searchAPI\"; // import { changeSearch } from \"../Slice/searchSlice\";\n\nimport SearchContent from \"./components/SearchContent\";\nimport SearchFilter from \"./components/SearchFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSearch.propTypes = {};\n\nfunction Search(props) {\n  _s();\n\n  const location = useLocation(); // get params\n\n  const keyword = useSelector(state => state.search.submit); // keyword to search\n\n  const dispatch = useDispatch();\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n  const [searchData, setSearchData] = useState();\n  const [searchFilter, setSearchFilter] = useState();\n  const [typeOfFilm, setTypeOfFilm] = useState();\n  const [selectType, setSelectType] = useState();\n  const [page, setPage] = useState(1); // useEffect(() => {\n  //   if (!location) return;\n  //           ;// get query string, path is ?query='querystring', first 7 letters need to slice\n  //   const action = changeSearch(params)\n  //   dispatch(action)\n  // }, [location,dispatch]); // add keyword\n\n  useEffect(() => {\n    if (!keyword) return;\n\n    const fetchSearchData = async () => {\n      const data = await searchAPI.getSearchData(API_Key, keyword, page);\n\n      if (!selectType) {\n        const newData = data.data.results.filter(item => item.media_type === \"tv\" || item.media_type === \"movie\");\n        setSearchData(newData);\n        setSearchFilter(newData);\n      }\n\n      if (selectType && selectType !== \"all\") {\n        const newData = data.data.results.filter(item => item.media_type === selectType);\n        setSearchFilter(newData);\n      }\n\n      if (selectType === \"all\") {\n        const newData = data.data.results.filter(item => item.media_type === \"tv\" || item.media_type === \"movie\");\n        setSearchFilter(newData);\n      }\n    };\n\n    fetchSearchData();\n  }, [keyword, API_Key, selectType, page]); // add data\n\n  useEffect(() => {\n    if (!searchData) return;\n    const typesSet = {};\n\n    for (let i = 0; i < searchData.length; i++) {\n      if (searchData[i].media_type in typesSet) {\n        typesSet[searchData[i].media_type] += 1;\n      } else {\n        typesSet[searchData[i].media_type] = 1;\n      }\n    }\n\n    setTypeOfFilm(typesSet);\n  }, [searchData]); // get all types\n\n  const handleSelectType = value => {\n    setSelectType(value);\n  }; // set type\n\n\n  const handlePagination = e => {\n    let currentPage = page;\n\n    if (e.target.value === \"backward\") {\n      currentPage -= 1;\n      if (currentPage < 1) return;\n      setPage(currentPage);\n    }\n\n    if (e.target.value === \"forward\") {\n      if ((searchData === null || searchData === void 0 ? void 0 : searchData.length) === 0) return;\n      setPage(page + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"search-container\",\n    style: {\n      width: \"90%\",\n      margin: \"0 5%\",\n      paddingTop: \"2rem\",\n      position: \"relative\",\n      top: \"4rem\",\n      zIndex: 1,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      gap: \"2rem\",\n      fontFamily: \"Source Sans Pro\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n      typeOfFilm: typeOfFilm,\n      total: searchData === null || searchData === void 0 ? void 0 : searchData.length,\n      handleSelectType: handleSelectType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchContent, {\n      searchData: searchFilter,\n      page: page,\n      handlePagination: handlePagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"21Xkl3AEQ3rYcAgGK+PiaJ50p+g=\", false, function () {\n  return [useLocation, useSelector, useDispatch];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","useLocation","searchAPI","SearchContent","SearchFilter","Search","propTypes","props","location","keyword","state","search","submit","dispatch","API_Key","process","env","REACT_APP_MOVIE_API","searchData","setSearchData","searchFilter","setSearchFilter","typeOfFilm","setTypeOfFilm","selectType","setSelectType","page","setPage","fetchSearchData","data","getSearchData","newData","results","filter","item","media_type","typesSet","i","length","handleSelectType","value","handlePagination","e","currentPage","target","width","margin","paddingTop","position","top","zIndex","display","justifyContent","gap","fontFamily"],"sources":["/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport searchAPI from \"../../api/searchAPI\";\n// import { changeSearch } from \"../Slice/searchSlice\";\nimport SearchContent from \"./components/SearchContent\";\nimport SearchFilter from \"./components/SearchFilter\";\n\nSearch.propTypes = {};\n\nfunction Search(props) {\n  const location = useLocation(); // get params\n  const keyword = useSelector(state => state.search.submit)// keyword to search\n\n  const dispatch = useDispatch()\n  \n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const [searchData, setSearchData] = useState();\n  const [searchFilter, setSearchFilter] = useState();\n\n  const [typeOfFilm, setTypeOfFilm] = useState();\n  const [selectType, setSelectType] = useState();\n\n  const [page, setPage] = useState(1);\n\n  // useEffect(() => {\n  //   if (!location) return;\n  //           ;// get query string, path is ?query='querystring', first 7 letters need to slice\n  //   const action = changeSearch(params)\n  //   dispatch(action)\n  // }, [location,dispatch]); // add keyword\n\n  useEffect(() => {\n    if (!keyword) return;\n    const fetchSearchData = async () => {\n      const data = await searchAPI.getSearchData(API_Key, keyword,page);\n      if (!selectType) {\n        const newData = data.data.results.filter(\n          (item) => item.media_type === \"tv\" || item.media_type === \"movie\"\n        );\n        setSearchData(newData);\n        setSearchFilter(newData);\n      }\n      if (selectType && selectType !== \"all\") {\n        const newData = data.data.results.filter(\n          (item) => item.media_type === selectType\n        );\n        setSearchFilter(newData);\n      }\n\n      if (selectType === \"all\") {\n        const newData = data.data.results.filter(\n          (item) => item.media_type === \"tv\" || item.media_type === \"movie\"\n        );\n        setSearchFilter(newData);\n      }\n    };\n    fetchSearchData();\n  }, [keyword, API_Key, selectType,page]); // add data\n\n  useEffect(() => {\n    if (!searchData) return;\n    const typesSet = {};\n    for (let i = 0; i < searchData.length; i++) {\n      if (searchData[i].media_type in typesSet) {\n        typesSet[searchData[i].media_type] += 1;\n      } else {\n        typesSet[searchData[i].media_type] = 1;\n      }\n    }\n\n    setTypeOfFilm(typesSet);\n  }, [searchData]); // get all types\n\n  const handleSelectType = (value) => {\n    setSelectType(value);\n  }; // set type\n\n  const handlePagination = (e) => {\n    let currentPage = page;\n    if (e.target.value === \"backward\") {\n      currentPage -= 1;\n      if (currentPage < 1) return;\n      setPage(currentPage);\n    }\n    if (e.target.value === \"forward\") {\n      if(searchData?.length === 0) return\n      setPage(page + 1);\n    }\n  }\n\n  return (\n    <section\n      className=\"search-container\"\n      style={{\n        width: \"90%\",\n        margin: \"0 5%\",\n        paddingTop: \"2rem\",\n        position: \"relative\",\n        top: \"4rem\",\n        zIndex: 1,\n\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        gap: \"2rem\",\n        fontFamily: \"Source Sans Pro\",\n      }}\n    >\n      <SearchFilter\n        typeOfFilm={typeOfFilm}\n        total={searchData?.length}\n        handleSelectType={handleSelectType}\n      />\n      <SearchContent searchData={searchFilter} page={page} handlePagination={handlePagination}/>\n    </section>\n  );\n}\n\nexport default Search;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEAC,MAAM,CAACC,SAAP,GAAmB,EAAnB;;AAEA,SAASD,MAAT,CAAgBE,KAAhB,EAAuB;EAAA;;EACrB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B,CADqB,CACW;;EAChC,MAAMQ,OAAO,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,MAAvB,CAA3B,CAFqB,CAEoC;;EAEzD,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EAEA,MAAMc,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA5B;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,EAA5C;EACA,MAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,EAAhD;EAEA,MAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,EAA5C;EACA,MAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,EAA5C;EAEA,MAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,CAAD,CAAhC,CAdqB,CAgBrB;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,OAAL,EAAc;;IACd,MAAMmB,eAAe,GAAG,YAAY;MAClC,MAAMC,IAAI,GAAG,MAAM3B,SAAS,CAAC4B,aAAV,CAAwBhB,OAAxB,EAAiCL,OAAjC,EAAyCiB,IAAzC,CAAnB;;MACA,IAAI,CAACF,UAAL,EAAiB;QACf,MAAMO,OAAO,GAAGF,IAAI,CAACA,IAAL,CAAUG,OAAV,CAAkBC,MAAlB,CACbC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,IAApB,IAA4BD,IAAI,CAACC,UAAL,KAAoB,OAD5C,CAAhB;QAGAhB,aAAa,CAACY,OAAD,CAAb;QACAV,eAAe,CAACU,OAAD,CAAf;MACD;;MACD,IAAIP,UAAU,IAAIA,UAAU,KAAK,KAAjC,EAAwC;QACtC,MAAMO,OAAO,GAAGF,IAAI,CAACA,IAAL,CAAUG,OAAV,CAAkBC,MAAlB,CACbC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoBX,UADhB,CAAhB;QAGAH,eAAe,CAACU,OAAD,CAAf;MACD;;MAED,IAAIP,UAAU,KAAK,KAAnB,EAA0B;QACxB,MAAMO,OAAO,GAAGF,IAAI,CAACA,IAAL,CAAUG,OAAV,CAAkBC,MAAlB,CACbC,IAAD,IAAUA,IAAI,CAACC,UAAL,KAAoB,IAApB,IAA4BD,IAAI,CAACC,UAAL,KAAoB,OAD5C,CAAhB;QAGAd,eAAe,CAACU,OAAD,CAAf;MACD;IACF,CAtBD;;IAuBAH,eAAe;EAChB,CA1BQ,EA0BN,CAACnB,OAAD,EAAUK,OAAV,EAAmBU,UAAnB,EAA8BE,IAA9B,CA1BM,CAAT,CAvBqB,CAiDoB;;EAEzC7B,SAAS,CAAC,MAAM;IACd,IAAI,CAACqB,UAAL,EAAiB;IACjB,MAAMkB,QAAQ,GAAG,EAAjB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,UAAU,CAACoB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;MAC1C,IAAInB,UAAU,CAACmB,CAAD,CAAV,CAAcF,UAAd,IAA4BC,QAAhC,EAA0C;QACxCA,QAAQ,CAAClB,UAAU,CAACmB,CAAD,CAAV,CAAcF,UAAf,CAAR,IAAsC,CAAtC;MACD,CAFD,MAEO;QACLC,QAAQ,CAAClB,UAAU,CAACmB,CAAD,CAAV,CAAcF,UAAf,CAAR,GAAqC,CAArC;MACD;IACF;;IAEDZ,aAAa,CAACa,QAAD,CAAb;EACD,CAZQ,EAYN,CAAClB,UAAD,CAZM,CAAT,CAnDqB,CA+DH;;EAElB,MAAMqB,gBAAgB,GAAIC,KAAD,IAAW;IAClCf,aAAa,CAACe,KAAD,CAAb;EACD,CAFD,CAjEqB,CAmElB;;;EAEH,MAAMC,gBAAgB,GAAIC,CAAD,IAAO;IAC9B,IAAIC,WAAW,GAAGjB,IAAlB;;IACA,IAAIgB,CAAC,CAACE,MAAF,CAASJ,KAAT,KAAmB,UAAvB,EAAmC;MACjCG,WAAW,IAAI,CAAf;MACA,IAAIA,WAAW,GAAG,CAAlB,EAAqB;MACrBhB,OAAO,CAACgB,WAAD,CAAP;IACD;;IACD,IAAID,CAAC,CAACE,MAAF,CAASJ,KAAT,KAAmB,SAAvB,EAAkC;MAChC,IAAG,CAAAtB,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEoB,MAAZ,MAAuB,CAA1B,EAA6B;MAC7BX,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;IACD;EACF,CAXD;;EAaA,oBACE;IACE,SAAS,EAAC,kBADZ;IAEE,KAAK,EAAE;MACLmB,KAAK,EAAE,KADF;MAELC,MAAM,EAAE,MAFH;MAGLC,UAAU,EAAE,MAHP;MAILC,QAAQ,EAAE,UAJL;MAKLC,GAAG,EAAE,MALA;MAMLC,MAAM,EAAE,CANH;MAQLC,OAAO,EAAE,MARJ;MASLC,cAAc,EAAE,eATX;MAULC,GAAG,EAAE,MAVA;MAWLC,UAAU,EAAE;IAXP,CAFT;IAAA,wBAgBE,QAAC,YAAD;MACE,UAAU,EAAEhC,UADd;MAEE,KAAK,EAAEJ,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEoB,MAFrB;MAGE,gBAAgB,EAAEC;IAHpB;MAAA;MAAA;MAAA;IAAA,QAhBF,eAqBE,QAAC,aAAD;MAAe,UAAU,EAAEnB,YAA3B;MAAyC,IAAI,EAAEM,IAA/C;MAAqD,gBAAgB,EAAEe;IAAvE;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA3GQpC,M;UACUJ,W,EACDF,W,EAECC,W;;;KAJVK,M;AA6GT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}