{"ast":null,"code":"var _jsxFileName = \"/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/TrailerHome/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport SlideButton from \"../../../../components/SlideButton\";\nimport { useState } from \"react\";\nimport TrailerTag from \"../../../../components/TrailerTag\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport tvAPI from \"../../../../api/tvAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTrailerHome.propTypes = {};\n\nfunction TrailerHome(props) {\n  _s();\n\n  const [trailerType, setTrailerType] = useState(\"option1\");\n  const [trailerData, setTrailerData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const handleTrailer = e => {\n    const type = e.target.attributes.value.value;\n    if (type !== trailerType) setTrailerType(type);\n    setTrailerData(); // id của trailerData k đổi kịp theo trailerType nên phải gán lại TrailerData bằng rỗng \n    // trước khi chạy useEffect để gán lại id cho từng cái TrailerTag ở dòng 49 và 27\n  };\n\n  const renderTrailerData = () => {\n    if (!trailerData) return;\n    return trailerData.map((item, idx) => {\n      let name = \"\";\n      if (trailerType === \"option1\") name = item === null || item === void 0 ? void 0 : item.name;\n      if (trailerType === \"option2\") name = item === null || item === void 0 ? void 0 : item.original_title;\n      return /*#__PURE__*/_jsxDEV(TrailerTag, {\n        name: name,\n        img: item === null || item === void 0 ? void 0 : item.backdrop_path,\n        id: item === null || item === void 0 ? void 0 : item.id,\n        trailerType: trailerType\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    if (!trailerType) return;\n\n    const fetchPopularData = async () => {\n      setIsLoading(true);\n\n      if (trailerType === \"option2\") {\n        const data = await movieAPI.getPopularHome(API_Key);\n        const setData = [];\n\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n\n        setTrailerData(setData);\n        setIsLoading(false);\n      }\n\n      if (trailerType === \"option1\") {\n        const data = await tvAPI.getPopularHome(API_Key);\n        const setData = [];\n\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n\n        setTrailerData(setData);\n        setIsLoading(false);\n      }\n    };\n\n    fetchPopularData();\n  }, [API_Key, trailerType]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"trailer-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lastest Trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlideButton, {\n        option1: \"On TV\",\n        option2: \"Theaters\",\n        handleOption: handleTrailer,\n        optionType: trailerType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-aos\": \"zoom-in\",\n      className: \"trailer-content\",\n      children: renderTrailerData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TrailerHome, \"UWHUGAkLa0YQabxKW1CERtA707Q=\");\n\n_c = TrailerHome;\nexport default TrailerHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrailerHome\");","map":{"version":3,"sources":["/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/TrailerHome/index.jsx"],"names":["React","useEffect","PropTypes","SlideButton","useState","TrailerTag","movieAPI","tvAPI","TrailerHome","propTypes","props","trailerType","setTrailerType","trailerData","setTrailerData","isLoading","setIsLoading","API_Key","process","env","REACT_APP_MOVIE_API","handleTrailer","e","type","target","attributes","value","renderTrailerData","map","item","idx","name","original_title","backdrop_path","id","fetchPopularData","data","getPopularHome","setData","i","push","results"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport SlideButton from \"../../../../components/SlideButton\";\nimport { useState } from \"react\";\nimport TrailerTag from \"../../../../components/TrailerTag\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport tvAPI from \"../../../../api/tvAPI\";\n\nTrailerHome.propTypes = {};\n\nfunction TrailerHome(props) {\n  const [trailerType, setTrailerType] = useState(\"option1\");\n  const [trailerData, setTrailerData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const handleTrailer = (e) => {\n    const type = e.target.attributes.value.value;\n    if (type !== trailerType) setTrailerType(type);\n    setTrailerData(); \n    // id của trailerData k đổi kịp theo trailerType nên phải gán lại TrailerData bằng rỗng \n    // trước khi chạy useEffect để gán lại id cho từng cái TrailerTag ở dòng 49 và 27\n  };\n\n  const renderTrailerData = () => {\n    if (!trailerData) return;\n\n    return trailerData.map((item, idx) => {\n      let name = \"\";\n      if (trailerType === \"option1\") name = item?.name;\n      if (trailerType === \"option2\") name = item?.original_title;\n      return (\n        <TrailerTag\n          key={idx}\n          name={name}\n          img={item?.backdrop_path}\n          id={item?.id}\n          trailerType={trailerType}\n        />\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!trailerType) return;\n\n    const fetchPopularData = async () => {\n      setIsLoading(true);\n      if (trailerType === \"option2\") {\n        const data = await movieAPI.getPopularHome(API_Key);\n        const setData = [];\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n        setTrailerData(setData);\n        setIsLoading(false);\n      }\n      if (trailerType === \"option1\") {\n        const data = await tvAPI.getPopularHome(API_Key);\n        const setData = [];\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n        setTrailerData(setData);\n        setIsLoading(false);\n      }\n    };\n    fetchPopularData();\n  }, [API_Key, trailerType]);\n\n  return (\n    <section className=\"trailer-home\">\n      <div className=\"trailer-title\">\n        <h2>Lastest Trailer</h2>\n        <SlideButton\n          option1=\"On TV\"\n          option2=\"Theaters\"\n          handleOption={handleTrailer}\n          optionType={trailerType}\n        />\n      </div>\n      {!isLoading ? (\n        <div data-aos=\"zoom-in\" className=\"trailer-content\">\n          {renderTrailerData()}\n        </div>\n      ) : null}\n    </section>\n  );\n}\n\nexport default TrailerHome;\n"]},"metadata":{},"sourceType":"module"}