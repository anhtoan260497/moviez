[{"/Users/rengarrrrr/Desktop/Studies/movie/src/index.js":"1","/Users/rengarrrrr/Desktop/Studies/movie/src/reportWebVitals.js":"2","/Users/rengarrrrr/Desktop/Studies/movie/src/App.js":"3","/Users/rengarrrrr/Desktop/Studies/movie/src/app/store.js":"4","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Slice/searchSlice.js":"5","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Slice/filmTypeSlice.js":"6","/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/index.jsx":"7","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/index.jsx":"8","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/index.jsx":"9","/Users/rengarrrrr/Desktop/Studies/movie/src/components/Navbar/index.jsx":"10","/Users/rengarrrrr/Desktop/Studies/movie/src/components/Footer/index.jsx":"11","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/index.jsx":"12","/Users/rengarrrrr/Desktop/Studies/movie/src/api/movieAPI.js":"13","/Users/rengarrrrr/Desktop/Studies/movie/src/api/tvAPI.js":"14","/Users/rengarrrrr/Desktop/Studies/movie/src/api/searchAPI.js":"15","/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/components/TypeFilter/index.jsx":"16","/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/components/TypeContent/index.jsx":"17","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/components/SearchContent/index.jsx":"18","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/components/SearchFilter/index.jsx":"19","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmDetail/index.jsx":"20","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmOverview/index.jsx":"21","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/SearchBar/index.jsx":"22","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/PopularHome/index.jsx":"23","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/TrendingHome/index.jsx":"24","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/TrailerHome/index.jsx":"25","/Users/rengarrrrr/Desktop/Studies/movie/src/api/axiosClient.js":"26","/Users/rengarrrrr/Desktop/Studies/movie/src/api/trendingAPI.js":"27","/Users/rengarrrrr/Desktop/Studies/movie/src/components/Sort/index.jsx":"28","/Users/rengarrrrr/Desktop/Studies/movie/src/components/SlideButton/index.jsx":"29","/Users/rengarrrrr/Desktop/Studies/movie/src/components/MovieTag/index.jsx":"30","/Users/rengarrrrr/Desktop/Studies/movie/src/components/Pagination/index.jsx":"31","/Users/rengarrrrr/Desktop/Studies/movie/src/components/TrailerTag/index.jsx":"32","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmFact/index.jsx":"33","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmRecommend/index.jsx":"34","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmCast/index.jsx":"35","/Users/rengarrrrr/Desktop/Studies/movie/src/components/CastTag/index.jsx":"36","/Users/rengarrrrr/Desktop/Studies/movie/src/components/RecommendTag/index.jsx":"37"},{"size":717,"mtime":1654911985719,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1654911985719,"results":"40","hashOfConfig":"39"},{"size":1017,"mtime":1654916647666,"results":"41","hashOfConfig":"39"},{"size":335,"mtime":1654911985712,"results":"42","hashOfConfig":"39"},{"size":687,"mtime":1654911985718,"results":"43","hashOfConfig":"39"},{"size":426,"mtime":1654911985718,"results":"44","hashOfConfig":"39"},{"size":4932,"mtime":1654911985718,"results":"45","hashOfConfig":"39"},{"size":3592,"mtime":1654916867167,"results":"46","hashOfConfig":"39"},{"size":480,"mtime":1654911985716,"results":"47","hashOfConfig":"39"},{"size":4276,"mtime":1654916653466,"results":"48","hashOfConfig":"39"},{"size":1132,"mtime":1654911985713,"results":"49","hashOfConfig":"39"},{"size":690,"mtime":1654911985717,"results":"50","hashOfConfig":"39"},{"size":1663,"mtime":1654911985712,"results":"51","hashOfConfig":"39"},{"size":1742,"mtime":1654911985712,"results":"52","hashOfConfig":"39"},{"size":271,"mtime":1654911985712,"results":"53","hashOfConfig":"39"},{"size":1364,"mtime":1654911985718,"results":"54","hashOfConfig":"39"},{"size":677,"mtime":1654911985718,"results":"55","hashOfConfig":"39"},{"size":1790,"mtime":1654911985717,"results":"56","hashOfConfig":"39"},{"size":1009,"mtime":1654911985717,"results":"57","hashOfConfig":"39"},{"size":3691,"mtime":1654911985715,"results":"58","hashOfConfig":"39"},{"size":5027,"mtime":1654911985715,"results":"59","hashOfConfig":"39"},{"size":1476,"mtime":1654911985716,"results":"60","hashOfConfig":"39"},{"size":2713,"mtime":1654911985716,"results":"61","hashOfConfig":"39"},{"size":2213,"mtime":1654911985717,"results":"62","hashOfConfig":"39"},{"size":2724,"mtime":1654911985716,"results":"63","hashOfConfig":"39"},{"size":877,"mtime":1654911985712,"results":"64","hashOfConfig":"39"},{"size":356,"mtime":1654911985712,"results":"65","hashOfConfig":"39"},{"size":1374,"mtime":1654911985714,"results":"66","hashOfConfig":"39"},{"size":904,"mtime":1654911985714,"results":"67","hashOfConfig":"39"},{"size":1618,"mtime":1654911985713,"results":"68","hashOfConfig":"39"},{"size":754,"mtime":1654911985713,"results":"69","hashOfConfig":"39"},{"size":1658,"mtime":1654911985714,"results":"70","hashOfConfig":"39"},{"size":5112,"mtime":1654911985715,"results":"71","hashOfConfig":"39"},{"size":949,"mtime":1654911985716,"results":"72","hashOfConfig":"39"},{"size":837,"mtime":1654911985715,"results":"73","hashOfConfig":"39"},{"size":655,"mtime":1654911985712,"results":"74","hashOfConfig":"39"},{"size":1020,"mtime":1654916751202,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"d0pdys",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"78"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"78"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rengarrrrr/Desktop/Studies/movie/src/index.js",[],["171","172"],"/Users/rengarrrrr/Desktop/Studies/movie/src/reportWebVitals.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/App.js",["173"],"import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Home from \"./features/Home\";\nimport Footer from \"./components/Footer\";\nimport Search from \"./features/Search\";\nimport FilmInfo from \"./features/FilmInfo\";\nimport TypeFilm from \"./features/TypeFilm\";\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Routes>\n        <Route path='/' element={<Home />}/>\n        <Route path='/search' element={<Search />} />\n        <Route path=':type/:id' element={<FilmInfo />} />\n        <Route path=':type/popular' element={<TypeFilm />} /> \n        <Route path=':type/nowplaying' element={<TypeFilm />} />\n        <Route path=':type/upcoming' element={<TypeFilm />} />\n        <Route path=':type/toprated' element={<TypeFilm />} />\n        <Route path=':type/airing' element={<TypeFilm />} />\n        <Route path=':type/ontv' element={<TypeFilm />} />\n      </Routes>\n      {/*<Footer />*/}\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/app/store.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/Slice/searchSlice.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/Slice/filmTypeSlice.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/index.jsx",["174","175"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport movieAPI from \"../../api/movieAPI\";\nimport tvAPI from \"../../api/tvAPI\";\nimport { useState } from \"react\";\nimport TypeContent from \"./components/TypeContent\";\nimport TypeFilter from \"./components/TypeFilter\";\n\nTypeFilm.propTypes = {};\n\nfunction TypeFilm(props) {\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const location = useLocation();\n\n  const typeFilm = location?.pathname.slice(1, 3);\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [data, setData] = useState();\n\n  const [sortData, setSortData] = useState();\n\n  const type =\n    typeFilm === \"tv\" ? location.pathname.slice(4) : location.pathname.slice(7);\n\n  const [sortType, setSortType] = useState(\"ratingDescending\");\n\n  const handleSortType = (values) => {\n    setSortType(values);\n  }; //set sortType\n\n  useEffect(() => {\n    if (!typeFilm || !type) return;\n    const fetchFilmData = async () => {\n      switch (typeFilm) {\n        case \"mo\":\n          switch (type) {\n            case \"popular\": {\n              const data = await movieAPI.getMoviePopular(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"nowplaying\": {\n              const data = await movieAPI.getMovieNowPlaying(\n                API_Key,\n                currentPage\n              );\n              setData(data.data.results);\n              break;\n            }\n            case \"upcoming\": {\n              const data = await movieAPI.getMovieUpcoming(\n                API_Key,\n                currentPage\n              );\n              setData(data.data.results);\n              break;\n            }\n            case \"toprated\": {\n              const data = await movieAPI.getMovieToprated(\n                API_Key,\n                currentPage\n              );\n              setData(data.data.results);\n              break;\n            }\n            default:\n              return null;\n          }\n          break;\n        case \"tv\":\n          switch (type) {\n            case \"popular\": {\n              const data = await tvAPI.getTvPopular(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"airing\": {\n              const data = await tvAPI.getTvAiring(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"ontv\": {\n              const data = await tvAPI.getTvOnTv(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            case \"toprated\": {\n              const data = await tvAPI.getTvTopRated(API_Key, currentPage);\n              setData(data.data.results);\n              break;\n            }\n            default:\n              return null;\n          }\n          break;\n        default:\n          return null;\n      }\n    };\n    fetchFilmData();\n  }, [typeFilm, type, API_Key, currentPage]);\n\n  useEffect(() => {\n    if (!sortType || !data) return;\n    switch (sortType) {\n      case \"popularDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.popularity - a.popularity);\n          setSortData(newData);\n        }\n        break;\n      case \"popularAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.popularity - b.popularity);\n          setSortData(newData);\n        }\n        break;\n      case \"ratingDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.vote_average - a.vote_average);\n          setSortData(newData);\n        }\n        break;\n      case \"ratingAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.vote_average - b.vote_average);\n          setSortData(newData);\n        }\n        break;\n      case \"titleDescending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => b.title - a.title);\n          setSortData(newData);\n        }\n        break;\n      case \"titleAscending\":\n        {\n          const newData = [...data];\n          newData.sort((a, b) => a.title.charCodeAt(0) - b.title.charCodeAt(0));\n          setSortData(newData);\n        }\n        break;\n      default:\n        return null;\n    }\n  }, [sortType, data]);\n\n  return (\n    <section\n      className=\"type-film\"\n      style={{\n        position: \"relative\",\n        top: \"4rem\",\n        width: \"100%\",\n        padding: \"2% 5%\",\n      }}\n    >\n      <h1 style={{ fontSize: \"2rem\", margin: \"0\" }}>{type}</h1>\n      <div style={{ display: \"flex\", gap: \"1rem\" }}>\n        <TypeFilter handleSortType={handleSortType} />\n        <TypeContent\n          data={sortData}\n          type={typeFilm === \"tv\" ? \"tv\" : \"movie\"}\n        />\n      </div>\n    </section>\n  );\n}\n\nexport default TypeFilm;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/index.jsx",["176","177"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport searchAPI from \"../../api/searchAPI\";\n// import { changeSearch } from \"../Slice/searchSlice\";\nimport SearchContent from \"./components/SearchContent\";\nimport SearchFilter from \"./components/SearchFilter\";\n\nSearch.propTypes = {};\n\nfunction Search(props) {\n  const location = useLocation(); // get params\n  const keyword = useSelector(state => state.search.submit)// keyword to search\n\n  const dispatch = useDispatch()\n  \n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const [searchData, setSearchData] = useState();\n  const [searchFilter, setSearchFilter] = useState();\n\n  const [typeOfFilm, setTypeOfFilm] = useState();\n  const [selectType, setSelectType] = useState();\n\n  const [page, setPage] = useState(1);\n\n  // useEffect(() => {\n  //   if (!location) return;\n  //           ;// get query string, path is ?query='querystring', first 7 letters need to slice\n  //   const action = changeSearch(params)\n  //   dispatch(action)\n  // }, [location,dispatch]); // add keyword\n\n  useEffect(() => {\n    if (!keyword) return;\n    const fetchSearchData = async () => {\n      const data = await searchAPI.getSearchData(API_Key, keyword,page);\n      if (!selectType) {\n        const newData = data.data.results.filter(\n          (item) => item.media_type === \"tv\" || item.media_type === \"movie\"\n        );\n        setSearchData(newData);\n        setSearchFilter(newData);\n      }\n      if (selectType && selectType !== \"all\") {\n        const newData = data.data.results.filter(\n          (item) => item.media_type === selectType\n        );\n        setSearchFilter(newData);\n      }\n\n      if (selectType === \"all\") {\n        const newData = data.data.results.filter(\n          (item) => item.media_type === \"tv\" || item.media_type === \"movie\"\n        );\n        setSearchFilter(newData);\n      }\n    };\n    fetchSearchData();\n  }, [keyword, API_Key, selectType,page]); // add data\n\n  useEffect(() => {\n    if (!searchData) return;\n    const typesSet = {};\n    for (let i = 0; i < searchData.length; i++) {\n      if (searchData[i].media_type in typesSet) {\n        typesSet[searchData[i].media_type] += 1;\n      } else {\n        typesSet[searchData[i].media_type] = 1;\n      }\n    }\n\n    setTypeOfFilm(typesSet);\n  }, [searchData]); // get all types\n\n  const handleSelectType = (value) => {\n    setSelectType(value);\n  }; // set type\n\n  const handlePagination = (e) => {\n    setTimeout(()=> {\n      window.scrollTo({\n        top : 0,\n        behavior:'smooth'\n      })\n    },700)\n    let currentPage = page;\n    if (e.target.value === \"backward\") {\n      currentPage -= 1;\n      if (currentPage < 1) return;\n      setPage(currentPage);\n    }\n    if (e.target.value === \"forward\") {\n      if(searchData?.length === 0) return\n      setPage(page + 1);\n    }\n  }\n\n  return (\n    <section\n      className=\"search-container\"\n      style={{\n        width: \"90%\",\n        margin: \"0 5%\",\n        paddingTop: \"2rem\",\n        position: \"relative\",\n        top: \"4rem\",\n        zIndex: 1,\n\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        gap: \"2rem\",\n        fontFamily: \"Source Sans Pro\",\n      }}\n    >\n      <SearchFilter\n        typeOfFilm={typeOfFilm}\n        total={searchData?.length}\n        handleSelectType={handleSelectType}\n      />\n      <SearchContent searchData={searchFilter} page={page} handlePagination={handlePagination}/>\n    </section>\n  );\n}\n\nexport default Search;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/index.jsx",["178","179"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FilmOverview from \"./components/FilmOverview\";\nimport FilmDetail from \"./components/FilmDetail\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\n\nFilmInfo.propTypes = {};\n\nfunction FilmInfo() {\n\n  const myRef = useRef()\n\n\n\n  return (\n    <div ref={myRef} style={{ position: \"relative\", top: \"4rem\" }}>\n\n      <FilmOverview />\n      <FilmDetail />\n    </div>\n  );\n}\n\nexport default FilmInfo;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/components/Navbar/index.jsx",["180"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport \"antd/dist/antd.css\";\nimport { Menu, Dropdown, Button, Input } from \"antd\";\nimport {GithubOutlined, SearchOutlined} from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { changeSearch, submitSearch } from \"../../features/Slice/searchSlice\";\nimport { useDispatch } from \"react-redux\";\n\nNavbar.propTypes = {};\n\nfunction Navbar(props) {\n  const [isSearch, setIsSearch] = useState(false);\n\n  const navigate = useNavigate()\n\n  const dispatch = useDispatch()\n\n  const keyword = useSelector((state)=> state.search.search)\n\n  const menu_movies = (\n    <Menu style={{ borderRadius: \"1rem\", width: \" 8rem\", textAlign: \"center\" }}>\n      <Menu.Item className=\"menu-items\" key={1}>\n        <Link to=\"/movie/popular\">Popular</Link>\n      </Menu.Item>\n      <Menu.Item className=\"menu-items\" key={2}>\n        <Link to=\"/movie/nowplaying\">Now Playing</Link>\n      </Menu.Item>\n      <Menu.Item className=\"menu-items\" key={3}>\n        <Link to=\"/movie/upcoming\">Upcoming</Link>\n      </Menu.Item>\n      <Menu.Item className=\"menu-items\" key={4}>\n        <Link to=\"/movie/toprated\">Top Rated</Link>\n      </Menu.Item>\n    </Menu>\n  );\n\n  const menu_tv = (\n    <Menu style={{ borderRadius: \"1rem\", width: \" 8rem\", textAlign: \"center\" }}>\n      <Menu.Item className=\"menu-items\" key={5}>\n        <Link to=\"/tv/popular\">Popular</Link>\n      </Menu.Item>\n      <Menu.Item className=\"menu-items\" key={6}>\n        <Link to=\"/tv/airing\">Airing Today</Link>\n      </Menu.Item>\n      <Menu.Item className=\"menu-items\" key={7}>\n        <Link to=\"/tv/ontv\">On TV</Link>\n      </Menu.Item>\n      <Menu.Item className=\"menu-items\" key={8}>\n        <Link to=\"/tv/toprated\">Top Rated</Link>\n      </Menu.Item>\n    </Menu>\n  );\n\n  const handleSearchIcon = () => {\n    setIsSearch(!isSearch);\n  };\n  \n\n  const onSubmitNavbarSearch = (e,values) => {\n    e.preventDefault()\n    const action =  submitSearch(values)\n    setIsSearch(!isSearch);\n    dispatch(action)\n\n    navigate({\n      pathname: \"search\",\n      search: `query=${values}`,\n    });\n  }\n\n  const handleSearchNavbar = (e) => {\n    const action = changeSearch(e.target.value) \n    dispatch(action)\n  }\n\n  return (\n    <>\n      <nav className=\"navbar-container\">\n        <div className=\"navbar-navigation\">\n          <Link to=\"/\">\n            <img\n              src={process.env.PUBLIC_URL + \"/svg/icon.svg\"}\n              alt=\"\"\n              className=\"navbar-logo\"\n            />{\" \"}\n          </Link>\n          <div className=\"navbar-menu\">\n            <Dropdown\n              className=\"navbar-menu-options\"\n              overlay={menu_movies}\n              placement=\"bottomCenter\"\n            >\n              <Button>Movies</Button>\n            </Dropdown>\n            <Dropdown\n              className=\"navbar-menu-options\"\n              overlay={menu_tv}\n              placement=\"bottomCenter\"\n            >\n              <Button>TV Shows</Button>\n            </Dropdown>\n          </div>\n        </div>\n        <div className=\"navbar-auth-search\">\n            <a\n                href=\"https://github.com/anhtoan260497/moviedb\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\",\n                    width: \"15rem\",\n                    height: \"4rem\",\n                }}\n            >\n                <GithubOutlined style={{ fontSize: \"2rem\", color: \"white\" }} />\n            </a>\n          <SearchOutlined\n            style={{ fontSize: \"1.2rem\", cursor: \"pointer\" }}\n            onClick={handleSearchIcon}\n          />\n        </div>\n      </nav>\n      {isSearch ? (\n        <form className=\"search-input\" onSubmit={(e)=>onSubmitNavbarSearch(e,keyword)}>\n        \n            <Input className=\"search\" onChange={e=>handleSearchNavbar(e)} value={keyword} /> \n            <button className=\"submit-btn\" type=\"submit\">\n              <SearchOutlined />\n            </button>\n       \n        </form>\n      ) : null}\n    </>\n  );\n}\n\nexport default Navbar;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/components/Footer/index.jsx",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/index.jsx",["181","182"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchBar from \"./components/SearchBar\";\nimport PopularHome from \"./components/PopularHome\";\nimport TrailerHome from \"./components/TrailerHome\";\nimport TrendingHome from \"./components/TrendingHome\";\nimport Footer from \"../../components/Footer\";\n\nHome.propTypes = {};\n\nfunction Home(props) {\n  return (\n    <div\n      className=\"home-container\"\n      style={{\n        width: \"90%\",\n        margin: \"0 5%\",\n        position: \"relative\",\n        top: \"4rem\",\n        zIndex :1,\n      }}\n    >\n      <SearchBar />\n      <PopularHome />\n      <TrailerHome />\n      <TrendingHome /> \n\n\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/api/movieAPI.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/api/tvAPI.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/api/searchAPI.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/components/TypeFilter/index.jsx",["183"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport Sort from \"../../../../components/Sort\";\n\nTypeFilter.propTypes = {};\n\nfunction TypeFilter({ handleSortType }) {\n  const [sortType, setSortType] = useState(\"ratingDescending\");\n\n  const [isSortTypeVisible, setIsSortTypeVisible] = useState(false);\n\n  const options = [\n    {\n      value: \"popularDescending\",\n      type: \"Populariry Descending\",\n    },\n    {\n      value: \"popularAscending\",\n      type: \"Populariry Ascending\",\n    },\n    {\n      value: \"ratingDescending\",\n      type: \"Rating Descending\",\n    },\n    {\n      value: \"ratingAscending\",\n      type: \"Rating Ascending\",\n    },\n    {\n      value: \"titleAscending\",\n      type: \"Title (A-Z)\",\n    },\n    {\n      value: \"titleDescending\",\n      type: \"Title (Z-A)\",\n    },\n  ];\n\n  const handleSortOption = (e) => {\n    setSortType(e.target.value);\n  };\n\n  const handleVisibleSortType = () => {\n    setIsSortTypeVisible(!isSortTypeVisible);\n  };\n\n\n  return (\n    <div className=\"type-filter\">\n      <Sort\n        sortType={sortType}\n        isSortTypeVisible={isSortTypeVisible}\n        handleSortOption={handleSortOption}\n        handleVisibleSortType={handleVisibleSortType}\n        handleSortType={handleSortType}\n        options={options}\n      />\n    </div>\n  );\n}\n\nexport default TypeFilter;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/TypeFilm/components/TypeContent/index.jsx",["184"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport MovieTag from \"../../../../components/MovieTag\";\n\nTypeContent.propTypes = {};\n\nfunction TypeContent({ data, type }) {\n\n\n  const renderData = () => {\n    if (!data) return;\n    return data.map((item, idx) => {\n      return (\n        <MovieTag\n          key={idx}\n          name={type ==='movie' ? item.title : item.name}\n          img={item.poster_path}\n          vote={item.vote_average}\n          id={item.id}\n          type={type}\n          border={true}\n        />\n      );\n    });\n  };\n\n  return <div className=\"type-content\">{renderData()}</div>;\n}\n\nexport default TypeContent;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/components/SearchContent/index.jsx",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/Search/components/SearchFilter/index.jsx",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmDetail/index.jsx",["185"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport FilmCast from \"../FilmCast\";\nimport FilmFact from \"../FilmFact\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport tvAPI from \"../../../../api/tvAPI\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport FilmRecommend from \"../FilmRecommend\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilmType } from \"../../../Slice/filmTypeSlice\";\nimport { useSelector } from \"react-redux\";\n\nFilmDetail.propTypes = {};\n\nfunction FilmDetail(props) {\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n  const location = useLocation();\n\n  const type = useSelector((state) => state.filmType);\n\n  const dispatch = useDispatch();\n\n  const id =\n    type === \"tv\" ? location.pathname.slice(4) : location.pathname.slice(7);\n\n  const [castData, setCastData] = useState();\n\n  const [filmData, setFilmData] = useState();\n\n  const [filmRecommend, setfilmRecommend] = useState();\n\n  const [externalIdData, setExternalIdData] = useState();\n\n  useEffect(() => {\n    const type = location.pathname.slice(1, 3);\n    const action = changeFilmType(type);\n    dispatch(action);\n  }, [location.pathname, dispatch]);\n\n  useEffect(() => {\n    if (!id || !type) return;\n    const fetchCastData = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTvCast(API_Key, id);\n        const newData = [];\n        for (let i = 0; i < 10; i++) {\n          newData.push(data.data.cast[i]);\n        }\n        setCastData(newData);\n      }\n      if (type === \"movie\") {\n        const data = await movieAPI.getMovieCast(API_Key, id);\n        const newData = [];\n        for (let i = 0; i < 10; i++) {\n          newData.push(data.data.cast[i]);\n        }\n        setCastData(newData);\n      }\n    };\n    fetchCastData();\n  }, [id, type, API_Key]);\n\n  useEffect(() => {\n    if (!id || !type) return;\n    const fetchFilmExternalId = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTvExternalId(API_Key, id);\n        setExternalIdData(data.data);\n      }\n      if (type === \"movie\") {\n        const data = await movieAPI.getMovieExternalId(API_Key, id);\n        setExternalIdData(data.data);\n      }\n    };\n    fetchFilmExternalId();\n  }, [id, type, API_Key]);\n\n  useEffect(() => {\n    if (!id || !type) return;\n    const fetchFilmData = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTvInfo(API_Key, id);\n        setFilmData(data.data);\n      }\n      if (type === \"movie\") {\n        const data = await movieAPI.getMovieInfo(API_Key, id);\n        setFilmData(data?.data);\n      }\n    };\n    fetchFilmData();\n  }, [id, type, API_Key]);\n\n  useEffect(() => {\n    if (!id || !type) return;\n    const fetchRecommend = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTvRecommend(API_Key, id);\n        let newData = [];\n        for (let i = 0; i < 10; i++) {\n          newData.push(data.data.results[i]);\n        }\n        setfilmRecommend(newData);\n      }\n      if (type === \"movie\") {\n        const data = await movieAPI.getMovieRecommend(API_Key, id);\n        let newData = [];\n        for (let i = 0; i < 10; i++) {\n          newData.push(data.data.results[i]);\n        }\n\n        setfilmRecommend(newData);\n      }\n    };\n    fetchRecommend();\n  }, [id, type, API_Key]);\n\n  return (\n    <div className=\"film-detail\">\n      <FilmCast castData={castData} />\n      <FilmFact\n        type={type}\n        filmData={filmData}\n        externalIdData={externalIdData}\n      />\n      <FilmRecommend filmRecommend={filmRecommend} />\n    </div>\n  );\n}\n\nexport default FilmDetail;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmOverview/index.jsx",["186"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport { Progress } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport tvAPI from \"../../../../api/tvAPI\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport { useState } from \"react\";\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\nimport { changeFilmType } from \"../../../Slice/filmTypeSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nFilmOverview.propTypes = {};\n\nfunction FilmOverview() {\n  const location = useLocation();\n\n  const type = useSelector((state) => state.filmType);\n\n  const dispatch = useDispatch();\n\n\n  const id =\n    type === \"tv\" ? location.pathname.slice(4) : location.pathname.slice(7);\n\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const [data, setData] = useState();\n\n\n  const [trailerURL, setTrailerURL] = useState(\"\");\n\n  useEffect(() => {\n    const type = location.pathname.slice(1, 3);\n    const action = changeFilmType(type);\n    dispatch(action);\n  }, [location.pathname, dispatch]);\n\n  useEffect(() => {\n    if (!id || !type) return;\n    const fetchMovieData = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTvInfo(API_Key, id);\n        setData(data.data);\n      }\n      if (type === \"movie\") {\n        const data = await movieAPI.getMovieInfo(API_Key, id);\n        setData(data.data);\n      }\n    };\n    fetchMovieData();\n  }, [id, type, API_Key]);\n\n  useEffect(() => {\n    // if (!data) return;\n    const fetchTrailer = async () => {\n      if (type === \"tv\") {\n        const data = await tvAPI.getTrailerHome(API_Key, id);\n        const trailer = data.data.results.filter(\n          (item) =>\n            item.name.includes(\"Official Trailer\") ||\n            item.name.includes(\"Trailer\")\n        );\n        setTrailerURL(trailer[0]?.key);\n      }\n      if (type === \"mo\") {\n        const data = await movieAPI.getTrailerHome(API_Key, id);\n        const trailer = data.data.results.filter(\n          (item) =>\n            item.name.includes(\"Official Trailer\") ||\n            item.name.includes(\"Trailer\")\n        );\n        setTrailerURL(trailer[0]?.key);\n      }\n    };\n    fetchTrailer();\n  }, [data, API_Key, id, type]);\n\n  const renderOverview = () => {\n    if (!data) return;\n\n\n    return (\n      <>\n        <div\n          style={{\n            position: \"absolute\",\n            height: \"32rem\",\n            width: \"100%\",\n            background:\n              \"linear-gradient(180deg,rgba(0,0,0,80%),rgba(0,0,0,100%))\",\n            opacity: \"0.7\",\n          }}\n        ></div>\n        <div className=\"film-overview-content\">\n          <img\n            className=\"film-overview-poster\"\n            src={data?.poster_path ? `https://image.tmdb.org/t/p/original${data?.poster_path}` : null}\n            alt=\"\"\n          />\n          <div className=\"film-overview-description\">\n            <div className=\"film-overview-title\">\n              <span>{type === \"tv\" ? data?.original_name : data?.original_title}</span>\n              {trailerURL ?  <a\n                style={{ marginLeft: \"1rem\", cursor: \"pointer\" }}\n                title=\"Trailer\"\n                href={`https://www.youtube.com/watch?v=${trailerURL}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <PlayCircleOutlined />\n              </a> : null}\n            </div>\n            <div className=\"film-overview-score\">\n              <h4 style={{ color: \"white\", fontWeight: \"600\" }}>User Score</h4>\n              <Progress\n                width={70}\n                className=\"score-progress\"\n                type=\"circle\"\n                percent={data?.vote_average * 10}\n                trailColor={\n                  data?.vote_average * 10 > 75\n                    ? \"rgba(33,208,122,40%)\"\n                    : data?.vote_average * 10 <= 75 && data?.vote_average * 10 > 50\n                    ? \"rgba(212,213,48,40%)\"\n                    : \"rgba(219,35,96,40%)\"\n                }\n                strokeColor={\n                  data?.vote_average * 10 > 75\n                    ? \"rgb(33,208,122)\"\n                    : data?.vote_average * 10 <= 75 && data?.vote_average * 10 > 50\n                    ? \"rgb(212,213,48)\"\n                    : \"rgb(219,35,96)\"\n                }\n                strokeWidth={10}\n              />\n            </div>\n            <p className=\"tagline\">{data?.tagline}</p>\n            <div className=\"overview\">\n              <h3 style={{ color: \"white\", fontSize: \"1.5rem\" }}>Overview</h3>\n              <p className=\"overview-description\">{data?.overview}</p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <section\n      className=\"film-overview\"\n      style={{\n        backgroundImage: data\n          ? `url(https://image.tmdb.org/t/p/original${data?.backdrop_path})`\n          : null,\n      }}\n    >\n      {\" \"}\n      {renderOverview()}\n    </section>\n  );\n}\n\nexport default FilmOverview;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/SearchBar/index.jsx",["187","188"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSearch, submitSearch } from \"../../../Slice/searchSlice\";\nimport { useSelector } from \"react-redux\";\n\nSearchBar.propTypes = {};\n\nfunction SearchBar() {\n\n  const { register, handleSubmit } = useForm();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch()\n\n  const search = useSelector(state => state.search.search)\n\n\n  const onSubmitSearch = () => {\n    const action = submitSearch(search)\n\n    dispatch(action)\n\n    navigate({\n      pathname: \"search\",\n      search: `query=${search}`,\n    });\n  };\n  //get data after submit\n\n  const handleChangeSearch = (e) => {\n    dispatch(changeSearch(e.target.value))\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmitSearch)}>\n      {/*onSubmit event = handleSubmit(useForm) and has 1 parameter is onSubmitSearch function */}\n      <input\n        className=\"search-field\"\n        type=\"text\"\n        autoComplete=\"none\"\n        {...register(\"search\", { maxLength: 20 })} //controller\n        placeholder=\"Search for a movie, TV Show, ...\"\n        onChange={e=>handleChangeSearch(e)}\n        value={search}\n      />\n      <button className=\"search-btn\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/PopularHome/index.jsx",["189"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SlideButton from \"../../../../components/SlideButton\";\nimport \"./styles.scss\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport MovieTag from \"../../../../components/MovieTag\";\nimport { useState } from \"react\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport tvAPI from \"../../../../api/tvAPI\";\n\nPopularHome.propTypes = {};\n\nfunction PopularHome(props) {\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const [popularType, setPopularType] = useState(\"option1\");\n  const [popularData, setPopularData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handlePopular = (e) => {\n    const type = e.target.attributes.value.value;\n    setIsLoading(true)\n    if (type !== popularType) setPopularType(type); // check if type !== current popularType => change type\n  };\n\n  const renderPopularData = () => {\n    if (!popularData) return;\n    return popularData.map((item, idx) => {\n      let name = \"\";\n      if (popularType === \"option1\") name = item?.name;\n      if (popularType === \"option2\") name = item?.original_title;\n      return (\n        <MovieTag\n          key={idx}\n          name={name}\n          img={item?.poster_path}\n          vote={item?.vote_average}\n          type={popularType === \"option1\" ? \"tv\" : \"movie\"}\n          id={item.id}\n        />\n      );\n    });\n  };\n\n  useEffect(() => {\n    AOS.init({\n      duration: 1000,\n      once: true,\n    });\n  }, [isLoading]);\n\n  useEffect(() => {\n    const fetchPopularData = async () => {\n      setIsLoading(true);\n      if (popularType === \"option2\") {\n        const data = await movieAPI.getPopularHome(API_Key);\n        const setData = [];\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n        setPopularData(setData);\n        setIsLoading(false);\n      }\n      if (popularType === \"option1\") {\n        const data = await tvAPI.getPopularHome(API_Key);\n        const setData = [];\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n        setPopularData(setData);\n        setIsLoading(false);\n      }\n    };\n    fetchPopularData();\n  }, [API_Key, popularType]);\n\n  return (\n    <section>\n      <div className=\"popular-title\">\n        <h2>What's Popular ?</h2>\n        <SlideButton\n          option1=\"On TV\"\n          option2=\"Theaters\"\n          handleOption={handlePopular}\n          optionType={popularType}\n        />\n      </div>\n      {!isLoading ? (\n        <div data-aos=\"zoom-in\" className=\"popular-content\">\n          {renderPopularData()}\n        </div>\n      ) :null}\n    </section>\n  );\n}\n\nexport default PopularHome;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/TrendingHome/index.jsx",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/features/Home/components/TrailerHome/index.jsx",["190"],"import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport SlideButton from \"../../../../components/SlideButton\";\nimport { useState } from \"react\";\nimport TrailerTag from \"../../../../components/TrailerTag\";\nimport movieAPI from \"../../../../api/movieAPI\";\nimport tvAPI from \"../../../../api/tvAPI\";\n\nTrailerHome.propTypes = {};\n\nfunction TrailerHome(props) {\n  const [trailerType, setTrailerType] = useState(\"option1\");\n  const [trailerData, setTrailerData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  const handleTrailer = (e) => {\n    const type = e.target.attributes.value.value;\n    if (type !== trailerType) setTrailerType(type);\n    setTrailerData(); \n    // id của trailerData k đổi kịp theo trailerType nên phải gán lại TrailerData bằng rỗng \n    // trước khi chạy useEffect để gán lại id cho từng cái TrailerTag ở dòng 49 và 27\n  };\n\n  const renderTrailerData = () => {\n    if (!trailerData) return;\n\n    return trailerData.map((item, idx) => {\n      let name = \"\";\n      if (trailerType === \"option1\") name = item?.name;\n      if (trailerType === \"option2\") name = item?.original_title;\n      return (\n        <TrailerTag\n          key={idx}\n          name={name}\n          img={item?.backdrop_path}\n          id={item?.id}\n          trailerType={trailerType}\n        />\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!trailerType) return;\n\n    const fetchPopularData = async () => {\n      setIsLoading(true);\n      if (trailerType === \"option2\") {\n        const data = await movieAPI.getPopularHome(API_Key);\n        const setData = [];\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n        setTrailerData(setData);\n        setIsLoading(false);\n      }\n      if (trailerType === \"option1\") {\n        const data = await tvAPI.getPopularHome(API_Key);\n        const setData = [];\n        for (let i = 0; i < 10; i++) {\n          setData.push(data.data.results[i]);\n        }\n        setTrailerData(setData);\n        setIsLoading(false);\n      }\n    };\n    fetchPopularData();\n  }, [API_Key, trailerType]);\n\n  return (\n    <section className=\"trailer-home\">\n      <div className=\"trailer-title\">\n        <h2>Lastest Trailer</h2>\n        <SlideButton\n          option1=\"On TV\"\n          option2=\"Theaters\"\n          handleOption={handleTrailer}\n          optionType={trailerType}\n        />\n      </div>\n      {!isLoading ? (\n        <div data-aos=\"zoom-in\" className=\"trailer-content\">\n          {renderTrailerData()}\n        </div>\n      ) : null}\n    </section>\n  );\n}\n\nexport default TrailerHome;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/api/axiosClient.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/api/trendingAPI.js",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/components/Sort/index.jsx",["191"],"import { React, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CaretDownOutlined } from \"@ant-design/icons\";\nimport \"./styles.scss\";\nimport { useEffect } from \"react\";\n\nSort.propTypes = {\n  sortType : PropTypes.string.isRequired,\n  isSortTypeVisible : PropTypes.bool.isRequired,\n  handleSortOption : PropTypes.func,\n  handleVisibleSortType : PropTypes.func,\n  options : PropTypes.array.isRequired,\n};\n\nfunction Sort({sortType,isSortTypeVisible,handleSortOption,handleVisibleSortType,handleSortType,options}) {\n\n  const renderOptions = () => {\n    return options.map((item,idx)=>{\n      return <option key={idx} value={item.value}>{item.type}</option>\n    })\n  }\n\n  useEffect(()=>{\n    handleSortType(sortType)\n  },[handleSortType,sortType]) // return sortType to TypeFilm component\n\n  \n\n  return (\n    <div className=\"sort\">\n      <div className=\"sort-dropdown-btn\" onClick={handleVisibleSortType}>\n        <h2 style={{margin:'0'}}>Sort</h2>\n        <CaretDownOutlined />\n      </div>\n     { isSortTypeVisible ? <><hr />\n       <div className=\"sort-select-container\">\n        <p style={{margin:'0',color:'gray'}}>Sort results by</p>\n        <select className=\"sort-select\" onChange={(e) => handleSortOption(e)} value={sortType} type=\"select\">\n        {renderOptions()}\n        </select>\n      </div></> : null}\n    </div>\n  );\n}\n\nexport default Sort;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/components/SlideButton/index.jsx",["192"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss'\nimport { useState } from 'react';\nimport clsx from 'clsx';\n\nSlideButton.propTypes = {\n    option1 : PropTypes.string.isRequired,\n    option2 : PropTypes.string.isRequired,\n    handleOption : PropTypes.func, \n    optionType : PropTypes.string, // type of Popular\n};\n\nfunction SlideButton({option1,option2,handleOption,optionType}) {\n\n    return (\n        <div className='slide'>\n            <div onClick={e => handleOption(e)} value='option1' className={clsx('slide-option',{\n                active : optionType === 'option1' ? true : false\n            })}>{option1}</div>\n            <div onClick={e => handleOption(e)} value='option2' className={clsx('slide-option',{\n                active : optionType === 'option2' ? true : false\n            })}>{option2}</div>\n        </div>\n    );\n}\n\nexport default SlideButton;","/Users/rengarrrrr/Desktop/Studies/movie/src/components/MovieTag/index.jsx",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/components/Pagination/index.jsx",[],"/Users/rengarrrrr/Desktop/Studies/movie/src/components/TrailerTag/index.jsx",["193"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport movieAPI from \"../../api/movieAPI\";\nimport tvAPI from \"../../api/tvAPI\";\n\nTrailerTag.propTypes = {};\n\nfunction TrailerTag({ name, img, id, trailerType }) {\n  const [trailerData, setTrailerData] = useState(\"\");\n  const API_Key = process.env.REACT_APP_MOVIE_API;\n\n  useEffect(() => {\n    if (!id || !trailerType) return;\n    const getTrailerKey = async () => {\n      if (trailerType === \"option2\") {\n        const data = await movieAPI.getTrailerHome(API_Key, id);\n        const dataFilter = data.data.results.filter((item) => {\n          return item.name.includes(\"Official Trailer\")|| item.name.includes('Official') || item.name.includes('Trailer');\n        });\n        setTrailerData(dataFilter);\n      }\n      if (trailerType === \"option1\") {\n        const data = await tvAPI.getTrailerHome(API_Key, id);\n        const dataFilter = data.data.results.filter((item) => {\n          return item.name.includes(\"Official Trailer\") || item.name.includes('Official') || item.name.includes('Trailer');\n        });\n        setTrailerData(dataFilter);\n      }\n    };\n    getTrailerKey();\n  }, [id, API_Key, trailerType]);\n\n  return (\n    <a className=\"trailer-tag\"\n    href={`https://www.youtube.com/watch?v=${trailerData[0]?.key}`}\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    >\n      <img\n        className=\"trailer-img\"\n        src={`https://image.tmdb.org/t/p/original${img}`}\n        alt=\"\"\n      />\n     \n        <h2 className=\"trailer-name\">{name}</h2>\n    </a>\n  );\n}\n\nexport default TrailerTag;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmFact/index.jsx",["194"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  InstagramOutlined,\n  PlaySquareOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport { Tooltip } from \"antd\";\n\nFilmFact.propTypes = {};\n\nfunction FilmFact({ type, filmData, externalIdData }) {\n\n\n  \n  return (\n    <div className=\"film-fact\">\n      <div className=\"film-social\">\n        {externalIdData?.imdb_id ? (\n          <Tooltip title=\"IMDb\" className=\"icon-container\">\n            <a\n              href={`https://www.imdb.com/title/${externalIdData.imdb_id}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <PlaySquareOutlined className=\"icon\" />\n            </a>\n          </Tooltip>\n        ) : null}\n        {externalIdData?.facebook_id ? (\n          <Tooltip className=\"icon-container\" title=\"Facebook\">\n            <a\n              href={`https://www.facebook.com/${externalIdData.facebook_id}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <FacebookOutlined className=\"icon\" title=\"Facebook\" />\n            </a>\n          </Tooltip>\n        ) : null}\n        {externalIdData?.twitter_id ? (\n          <Tooltip className=\"icon-container\" title=\"Twitter\">\n            <a\n              href={`https://twitter.com/${externalIdData.twitter_id}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <TwitterOutlined className=\"icon\" title=\"Twitter\" />\n            </a>\n          </Tooltip>\n        ) : null}\n        {externalIdData?.instagram_id ? (\n          <Tooltip className=\"icon-container\" title=\"Instagram\">\n            <a\n              href={`https://www.instagram.com/${externalIdData.instagram_id}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <InstagramOutlined className=\"icon\" title=\"Instagram\" />\n            </a>\n          </Tooltip>\n        ) : null}\n        {filmData?.homepage ? (\n          <Tooltip className=\"icon-container\" title=\"Homepage\">\n            <a href={filmData?.homepage} target=\"_blank\" rel=\"noreferrer\">\n              <LinkOutlined className=\"icon\" title=\"Instagram\" />\n            </a>\n          </Tooltip>\n        ) : null}\n      </div>\n      <hr />\n      {type === \"tv\" ? (\n        <div className=\"film-facts\">\n          <h2 style={{ fontSize: \"1.5rem\" }}>Facts</h2>\n          <div className=\"film-facts-info\">\n            <h2>Original Name</h2>\n            <p>{filmData?.original_name}</p>\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Status</h2>\n            <p>{filmData?.status}</p>\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Network</h2>\n            <img\n              src={\n                filmData?.networks[0]?.logo_path\n                  ? `https://image.tmdb.org/t/p/original${filmData?.networks[0]?.logo_path}`\n                  : null\n              }\n              alt=\"\"\n            />\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Type</h2>\n            <p>{filmData?.type}</p>\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Original Language</h2>\n            <p>{filmData?.spoken_languages?.[0]?.name}</p>\n          </div>\n        </div>\n      ) : (\n        // movies\n        <div className=\"film-facts\">\n          <h2 style={{ fontSize: \"1.5rem\" }}>Facts</h2>\n          <div className=\"film-facts-info\">\n            <h2>Status</h2>\n            <p>{filmData?.status}</p>\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Network</h2>\n           {filmData?.production_companies[0]?.logo_path ?  <img\n              src={\n                filmData?.production_companies[0]?.logo_path\n                  ? `https://image.tmdb.org/t/p/original${filmData?.production_companies[0]?.logo_path}`\n                  : null\n              }\n              alt=\"\"\n            /> : '-'}\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Budget</h2>\n            <p>\n              {filmData?.budget\n                ? filmData?.budget < 1000000\n                  ? ` $${Math.trunc(filmData?.budget / 1000)} K`\n                  : `${Math.trunc(filmData?.budget / 1000000)} M`\n                : \"-\"}\n            </p>\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Revenue</h2>\n            <p>\n              {filmData?.revenue\n                ? filmData?.revenue < 1000000\n                  ? ` $${Math.trunc(filmData?.revenue / 1000)} K`\n                  : filmData?.revenue < 1000000000\n                  ? `${Math.trunc(filmData?.revenue / 1000000)} M`\n                  : `${(filmData?.revenue / 1000000000).toFixed(1)} B`\n                : \"-\"}\n            </p>\n          </div>\n          <div className=\"film-facts-info\">\n            <h2>Original Language</h2>\n            <p>{filmData?.spoken_languages?.[0]?.name? filmData?.spoken_languages?.[0]?.name : '-'}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FilmFact;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmRecommend/index.jsx",["195"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport RecommendTag from \"../../../../components/RecommendTag\";\n\nFilmRecommend.propTypes = {};\n\nfunction FilmRecommend({ filmRecommend }) {\n  const renderFilmRecommend = () => {\n    if (!filmRecommend) return;\n    const newFilmRecommend = filmRecommend.filter((item) => item !== undefined);\n\n    return newFilmRecommend.map((item, idx) => {\n      const { backdrop_path, name, media_type, id, title } = item;\n      return (\n        <RecommendTag\n          key={idx}\n          img={backdrop_path}\n          name={media_type === \"tv\" ? name : title}\n          type={media_type}\n          id={id}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"film-recommend\">\n      <h2 style={{ fontSize: \"1.5rem\" }}>Recommendations</h2>\n      <div className=\"film-recommend-content\">{renderFilmRecommend()}</div>\n    </div>\n  );\n}\n\nexport default FilmRecommend;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/features/FilmInfo/components/FilmCast/index.jsx",["196"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\nimport CastTag from \"../../../../components/CastTag\";\n\nFilmCast.propTypes = {};\n\nfunction FilmCast({castData}) {\n\n\n  const renderCastTag = () => {\n    if(!castData) return \n\n    const castDataItems = castData.filter((item)=>{\n      return item !== undefined\n    }) \n\n    return castDataItems.map((item,idx)=>{\n      const {name,profile_path,character} = item\n      return  <CastTag key={idx} profile_path={profile_path} character={character} name={name}/>\n    })\n  }\n\n  return (\n    <div className=\"film-cast\">\n      <h2 style={{fontSize:'1.5rem'}}>Series Cast</h2>\n      <div style={{width : '70%',overflow:'scroll'}}>\n        <div className=\"cast\">\n         {renderCastTag()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FilmCast;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/components/CastTag/index.jsx",["197"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\n\nCastTag.propTypes = {};\n\nfunction CastTag({profile_path,character,name}) {\n\n  return (\n    <div className=\"cast-tag\">\n      <img\n        className=\"cast-img\"\n        src={!profile_path ? process.env.PUBLIC_URL + '/svg/no_image.png' : `https://www.themoviedb.org/t/p/w440_and_h660_face${profile_path}`}\n        alt=\"\"\n      />\n      <div className=\"cast-detail\">\n      <h2 style={{fontSize:'1rem',textAlign:'center'}}>{name}</h2>\n      <p style={{fontSize:'.8rem',margin:'0',textAlign:'center'}}>{character}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default CastTag;\n","/Users/rengarrrrr/Desktop/Studies/movie/src/components/RecommendTag/index.jsx",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":14},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"207","line":20,"column":23,"nodeType":"204","messageId":"205","endLine":20,"endColumn":37},{"ruleId":"202","severity":1,"message":"208","line":13,"column":9,"nodeType":"204","messageId":"205","endLine":13,"endColumn":17},{"ruleId":"202","severity":1,"message":"209","line":16,"column":9,"nodeType":"204","messageId":"205","endLine":16,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"210","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":19},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"203","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":14},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"211","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":18},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"211","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"211","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":18},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":17},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'setCurrentPage' is assigned a value but never used.","'location' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]